lexer grammar NyarLexer;

LAPREN  : '(';
RPAREN  : ')';
ADD     : '+';
RESTA   : '-';
MUL     : '*';
DIV     : '/';
LESS    : '<';
LESS_EQUAL: '<=';
GREATER : '>';
GREATER_EQUAL: '>=';
EQUAL   : '=';
NEQ     : '!=';
EQEQ    : '==';
COMMA   : ',';
SEMI    : ';';
LBRACKET: '[';
RBRACKET: ']';
OR      : '||';
AND     : '&&';
DOT     : '.';
HINT_INDICATOR: ':';

LINE_COMMENT : '//' ~('\r'|'\n') -> skip;
START_BLOCK : '{';
END_BLOCK   : '}';
STRING  : ('"' | '\'') .*? ('"' | '\'');
COMMENT : '/*' .*? '*/' -> skip;
IMPORT  : 'importar';
STRUCTDef  : 'estructura';
FUNC    : 'funcion';
FOR     : 'iterar';
WHILE   : 'mientras';
DESDE   : 'desde';
HASTA   : 'hasta';
EN      : 'en';
COND    : 'si';
ELSE_COND: 'sino';
BOOL    : ('verdadero' | 'falso');
NADA    : 'NADA';
RETURN : 'retornar';
ID      : [a-zA-Z_][a-zA-Z_0-9]*;
NUM     : '-'?[0-9]+('.'[0-9]+)?([eE][+-]?[0-9]+)?;
WS      : [ \t\n\r]+ -> skip;
